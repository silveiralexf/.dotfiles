#!/bin/bash

# update path
export PATH="${PATH}:${HOME}/bin:${HOME}/.local/bin:/usr/local/bin:/usr/sbin:/sbin::";

# Gpg TTY
export GPG_TTY="$(tty)";



# Git 2.1.3 path
export PATH="$PATH:/usr/local/git/bin::";

# Python/Miniconda
export PATH="$PATH:$HOME/miniconda3/bin::";

# Golang exports
export GOROOT="/usr/local/go";
export GOPATH="$HOME/go";
export GOBIN="$GOPATH/bin";
export PATH="$PATH:$GOBIN:$GOROOT/bin::";
export GO111MODULE="on";

# Rust / Cargo
export PATH="${PATH}:${HOME}/.cargo/bin::";

# Python/Miniconda
export PATH="$PATH:$HOME/miniconda3/bin::";

# Java exports (1.8.0_171) / Maven
export JAVA_HOME="/opt/jdk1.8.0_171";
export JRE_HOME="/opt/jdk1.8.0_171/jre";
export PATH="$PATH:/opt/jdk1.8.0_171/bin:/opt/jdk1.8.0_171/jre/bin::";
export PATH="$PATH:/opt/apache-maven-3.5.4/bin::";
[ -f /etc/bash_completion.d/mvn ] && source /etc/bash_completion.d/mvn

# don't put duplicate lines or lines starting with space in bash history
export HISTCONTROL="ignoredups:erasedups";

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
export HISTSIZE=50000000;
export HISTFILESIZE="$HISTSIZE";

# Make some commands not show up in history
export HISTIGNORE="&:ls:cd -:cd:date:* --help:exit:pwd:history:clear:mount:umount:[ \t]*";


# AppImage export to PATH
export PATH="$PATH:$HOME/AppImage::"

# Display settings for KeePassXC (running with AppImage)
export QT_AUTO_SCREEN_SCALE_FACTOR=0
export QT_SCREEN_SCALE_FACTORS=DP1=1.5 #;DP1=1.5;DP2=1.5;HDMI1=1.5;HDMI2=1.5;VIRTUAL1=1.5; 

# Adding /opt/bin path to path to use docker-compose
export PATH="$PATH:/opt/bin::";

# ipm-cli
export PATH="$PATH:/opt/ipm-cli::";


# update cdpath
export CDPATH="${CDPATH}:${GOPATH}/src/golang.org:${GOPATH}/src:${GOPATH}/src/github.com:${GOPATH}/src/github.ibm.com"

# GoFish source
command -v gofish &>/dev/null && eval "$(gofish tank)"

# CLI auto-completes
command -v kubectl &> /dev/null && source <(kubectl completion bash)
command -v helm &> /dev/null && source <(helm completion bash)
[ -f /usr/local/ibmcloud/bx/bash_autocomplete ] && source /usr/local/ibmcloud/bx/bash_autocomplete
[ -f /etc/bash_completion.d/mvn ] && source /etc/bash_completion.d/mvn

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi

unset color_prompt force_color_prompt

# Syntax highlight for LESS command
if command -v source-highlight &> /dev/null 2>&0 ; then 
    export PAGER="less"
    export LESS="-R"
    [ -f "$HOME/.dotfiles/utils/src-hilite-lesspipe.sh" ] && export LESSOPEN="| $HOME/.dotfiles/utils/src-hilite-lesspipe.sh %s"
fi

# make less more friendly for non-text input files, see lesspipe(1)
[ -f /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# EOF
