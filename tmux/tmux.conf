# -----------------------------------------------------------------------------
# Color & Themes
# -----------------------------------------------------------------------------
_tmux_white=colour15
_tmux_black=colour232
_tmux_red=colour1
_tmux_purple=colour54
_tmux_grey_l=colour145
_tmux_grey_d=colour236
_tmux_blue=colour25
_tmux_blue_d=colour17
_tmux_green=colour34

# -----------------------------------------------------------------------------
# Core Settings
# -----------------------------------------------------------------------------

set -g base-index 1                  # 0 is too far from ` ;)
#set -g default-terminal "wezterm"
set -g display-time 5000
set -g focus-events on
set -g history-limit 99999
set -g message-command-style "fg=$_tmux_grey_l,bg=$_tmux_grey_d"
set -g renumber-windows on
set -g status-keys "vi"
set -ga terminal-features '*:overline:strikethrough:usstyle:RGB'
set -sg escape-time 0                # No delay for escape key press

set-option -g allow-rename off
set-option -g default-shell /bin/zsh
set-option -g set-titles on

setw -g aggressive-resize on
setw -g mode-keys "vi"
setw -g monitor-activity on

# Yazi recommended settings
set -g allow-passthrough on
set -g visual-activity off
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# -----------------------------------------------------------------------------
# Windows
# -----------------------------------------------------------------------------
set-option -g message-style "fg=colour233,bg=colour30"
set-window-option -g automatic-rename on
set-window-option -g mode-style "fg=colour232,bg=colour30"
set-window-option -q -g "utf8 on"

# -----------------------------------------------------------------------------
# Status
# -----------------------------------------------------------------------------
set -g status-style default
set -g status-bg "black"
set -g status-fg "white"
set -g status-interval 60

set -g status-left-length 800
set -g status-left "#[fg=green,bg=default,bright] ðŸ’¥ [#S] "
set -g status-left-style '#{?client_prefix,bg=red,}'

set -g status-right-length 200
set -g status-right-style default

# gitmux plugin
setw -g status-right '#(gitmux "#{pane_current_path}")  #[fg=yellow]'
setw -g window-status-current-style fg=black,bg=gold

# -----------------------------------------------------------------------------
# Panes
# -----------------------------------------------------------------------------
set -g display-panes-active-colour "white"
set -g display-panes-colour "black"
set -g pane-active-border-style "bg=default,fg=cyan"
set -g pane-border-format "[#[fg=white]#{?pane_active,#[bold],} :#P: #T #[fg=default,nobold]]"
set -g pane-border-status "off"
set -g pane-border-style "fg=blue"

# Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
set-hook -g "after-new-session"  'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g "after-new-window"   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g "after-kill-pane"    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g "pane-exited"        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g "after-split-window" 'run-shell -b "if [ \#{window_panes} -gt 1 ]; then tmux set pane-border-status top; fi"'

# -----------------------------------------------------------------------------
# Keybindings
# -----------------------------------------------------------------------------

# default leder key
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# restores the Clear Screen (C-l) binding
bind C-l send-keys 'C-l'

# Reload tmux config
bind r source-file ~/.tmux.conf

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# swap window position
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

# window navigation
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key c new-window      -c "#{pane_current_path}"

# pane navigation
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

# pane resize
bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Vim style copy-paste
bind P paste-buffer

# Tmux > 2.4
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection  # Begin selection in copy mode.
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle # Begin selection in copy mode.
bind-key -T copy-mode-vi 'y' send -X copy-selection   # Yank selection in copy mode.

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# open new LazyGit window on current path
bind -r '\' display-popup -d '#{pane_current_path}' -w90% -h90% -E "lazygit"

# fuzzy find sessions
unbind C-w
bind -r 'w' display-popup -h 75% -w 75% -E "${DOTFILES_HOME}/tmux/session-fzf-popup.tmux"

# search password from pass-store
set -g @plugin 'rafi/tmux-pass'
run-shell ${DOTFILES_HOME}/tmux/tmux-pass/plugin.tmux
set -g @pass-window-size 10
set -g @pass-hide-pw-from-preview 'on'
# set -g @pass-copy-to-clipboard on

# kill all sessions
bind P paste-buffer
bind -r X display-popup -d '#{pane_current_path}' -w50% -h50% -E "${DOTFILES_HOME}/tmux/session-kill-all.tmux"

# -----------------------------------------------------------------------------
# EOF
# -----------------------------------------------------------------------------
